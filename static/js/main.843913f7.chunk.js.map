{"version":3,"sources":["myFirebase.js","routes/AuthForm.js","routes/Auth.js","components/Kweet.js","components/KweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassWord","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Kweet","kweetObj","isOwner","editing","setEditing","text","newKweet","setNewKweet","handleDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","handleSubmit","update","placeHolder","autoFocus","Date","createdAt","toDateString","src","alt","faTrash","faPencilAlt","KweetFactory","userObj","kweet","setKweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","now","creatorId","displayName","collection","add","maxLength","htmlFor","faPlus","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","opacity","backgroundImage","faTimes","Home","kweets","setKweets","useEffect","onSnapshot","snapshot","kweetArray","docs","map","data","sort","k1","k2","margin","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyKweets","where","orderBy","get","updateProfile","marginTop","signOut","push","Navigation","display","justifyContent","to","pathname","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","currentUser","args","height","faSpinner","spin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.843913f7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n// 매번 호출해서 사용하지 않고 한 번만 호출해서 export 한다.\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n//export const ~Service = firebase.~();\r\n//....\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"myFirebase\";\r\nimport \"./AuthForm.css\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassWord] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Create User 와 Sign In 토글\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value); //xzczxc\r\n    } else {\r\n      setPassWord(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    // prevent refresh\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n        // createUser와 동시에 로그인도 수행함\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService, firebaseInstance } from \"myFirebase\";\r\nimport React from \"react\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  // Social login\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#00A0F0\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <br />\r\n      <div className=\"authBtns\">\r\n        <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button className=\"authBtn\" onClick={onSocialClick} name=\"github\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"myFirebase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Kweet.css\";\r\n\r\nconst Kweet = ({ kweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newKweet, setNewKweet] = useState(kweetObj.text);\r\n  const handleDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this kweet?\");\r\n    if (ok) {\r\n      //delete\r\n      await dbService.doc(`kweets/${kweetObj.id}`).delete();\r\n      //url에서 reference를 얻어 storage의 이미지파일 삭제\r\n      await storageService.refFromURL(kweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n    setNewKweet(kweetObj.text);\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`kweets/${kweetObj.id}`).update({\r\n      text: newKweet,\r\n    });\r\n    setNewKweet(\"\");\r\n    setEditing(false);\r\n  };\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n\r\n    if (name === \"editKweet\") {\r\n      setNewKweet(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"kweet\">\r\n      {/* edit kweet */}\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={handleSubmit} className=\"container kweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"editKweet\"\r\n              value={newKweet}\r\n              placeHolder=\"Edit your Kweet\"\r\n              autoFocus\r\n              onChange={handleChange}\r\n              required\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Kweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"kweet__info\">\r\n            <span className=\"kweet__author\">{kweetObj.name} </span>\r\n            <span className=\"kweet__time\">\r\n              · {new Date(kweetObj.createdAt).toDateString()}\r\n            </span>\r\n          </div>\r\n          <div className=\"kweet__content\">\r\n            <div>\r\n              <span>{kweetObj.text}</span>\r\n            </div>\r\n            {kweetObj.attachmentUrl && (\r\n              <img src={kweetObj.attachmentUrl} alt={\"kweet\"} />\r\n            )}\r\n            {isOwner && (\r\n              <div className=\"kweet__actions\">\r\n                <span onClick={handleDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} color=\"#4e4e4e\" />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} color=\"#3e3e3e\" />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kweet;\r\n","import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"myFirebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./KweetFactory.css\";\r\n\r\nconst KweetFactory = ({ userObj }) => {\r\n  const [kweet, setKweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\"); // image file attachment 파일 첨부\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (kweet === \"\") return;\r\n    let attachmentUrl = \"\";\r\n    //첨부 파일이 있는 경우에만\r\n    if (attachment !== \"\") {\r\n      //file에 대한 reference를 가진다.\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      //storage에 첨부파일 저장\r\n      const response = await attachmentRef.putString(attachment, \"data_url\"); //data_url : data format\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    //collection에 저장할 kweet 객체\r\n    const kweetObj = {\r\n      text: kweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      name: userObj.displayName,\r\n      attachmentUrl,\r\n    };\r\n    //새로운 document를 collection에 저장(document id 자동 부여)\r\n    await dbService.collection(\"kweets\").add(kweetObj);\r\n    setKweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setKweet(value);\r\n  };\r\n  const handleFileChange = (event) => {\r\n    //console.log(event.target.files);\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      // result는 엄청나게 긴 이미지 주소(브라우저에서 볼 수 있음)\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  // 첨부 이미지 미리보기 제거\r\n  const handleClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={kweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photo</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      {/*이미지 파일만 업로드 가능*/}\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n        accept=\"image/*\"\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"attachment\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={handleClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default KweetFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"myFirebase\";\r\nimport Kweet from \"components/Kweet\";\r\nimport KweetFactory from \"components/KweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [kweets, setKweets] = useState([]);\r\n  useEffect(() => {\r\n    //onSnapshot : db의 변화를 감지하는 listner (real time)\r\n    dbService.collection(\"kweets\").onSnapshot((snapshot) => {\r\n      const kweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      //시간순 정렬\r\n      kweetArray.sort((k1, k2) => k2.createdAt - k1.createdAt);\r\n      setKweets(kweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <KweetFactory userObj={userObj} />\r\n      <div style={{ margin: \"30px 0\" }}>\r\n        {kweets.map((kweet) => {\r\n          return (\r\n            <Kweet\r\n              key={kweet.id}\r\n              kweetObj={kweet}\r\n              isOwner={kweet.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"myFirebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Profile.css\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const handleLogoutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyKweets = async () => {\r\n    // db에서 where문 필터링을 통해 알맞은 kweet들을 가져온다.\r\n    // 복잡한 쿼리는 인덱스를 만들어줘야 함(개발자 콘솔 에러 링크 클릭)\r\n    const kweets = await dbService\r\n      .collection(\"kweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid) //원한다면 where().where()... 처럼 필터링 여러 번 가능\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    kweets.docs.map((doc) => doc.data());\r\n  };\r\n  useEffect(() => {\r\n    getMyKweets();\r\n  }, []);\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={handleChange}\r\n          autoFocus\r\n          type=\"text\"\r\n          value={newDisplayName}\r\n          placeholder=\"Display name\"\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={handleLogoutClick}>\r\n        Log out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj, refreshUser }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#00A0F0\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: \"/profile\",\r\n            }}\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#00A0F0\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName}'s Profile\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  //Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n// src폴더를 base로 한 경로로 설정되어 있음\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      {/* 로그인 상태에 따라 라우트 구성이 달라짐 */}\r\n      <Switch>\r\n        <>\r\n          {\" \"}\r\n          {/* Switch 안에 fragment를 사용해야 오류문구 발생 안함. div로 해도 기능상 문제는 없음 */}\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {/* Fragment */}\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n              {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myFirebase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  //firebase가 실행되고 현재 유저정보를 가져오면 init = true\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    //firebase가 실행되고 현재 유저정보가 변화하면 실행\n    //IndexedDB에 저장된 user정보 변경할 때마다 동작하는 콜백\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        //로그인 O\n        if (!user.displayName) {\n          user.updateProfile({ displayName: \"user\" });\n          user.displayName = \"user\";\n        }\n        setUserObj(user);\n      } else {\n        //로그인 X\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // setUserObj(user)는 리액트의 얕은 비교에 의해 같은 값으로 여겨지기 때문에 아래와 같이 작성\n    // 혹은 setUserObj(Object.assign({}, user));\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      // 우리가 원하는 function을 얻기 위한 중간 function 역할\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <FontAwesomeIcon icon={faSpinner} spin size=\"2x\" />\n          <h3>Initializing...</h3>\n        </div>\n      )}\n      {/* <footer>&copy; Kwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}